//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;
    using System.Linq;
    using App_Code;
    public partial class clsBook_Authored
    {
        #region Fields

        public static string Book_Authored_ID = "Book_Authored_ID";
        public static string Book_Title = "Book_Title";
        public static string Authors = "Authors";
        public static string Publication_Year = "Publication_Year";
        public static string Publisher = "Publisher";
        public static string Country = "Country";
        public static string Project_Code = "Project_Code";
        public static string Funding_Year = "Funding_Year";
        public static string Completed = "Completed";
        public static string Language = "Language";
        public static string isCompleted = "isCompleted";
        public static string CreatedOn = "CreatedOn";
        public static string CreatedBy = "CreatedBy";
        public static string UpdatedOn = "UpdatedOn";
        public static string UpdatedBy = "UpdatedBy";
        public static string Active_flag = "Active_flag";
        public static string Deleted_flag = "Deleted_flag";

        #endregion
    }

    public partial class Book_AuthoredController
    {
        #region Fields

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Book_AuthoredController()
        {
            this.Book_Authored_Author = new HashSet<Book_Authored_AuthorController>();
        }

        public int Book_Authored_ID { get; set; }
        public string Book_Title { get; set; }
        public string Authors { get; set; }
        public string Publication_Year { get; set; }
        public string Publisher { get; set; }
        public string Country { get; set; }
        public string Project_Code { get; set; }
        public int? Funding_Year { get; set; }
        public string Completed { get; set; }
        public string Language { get; set; }
        public bool isCompleted { get; set; }
        public DateTime CreatedOn { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? UpdatedOn { get; set; }
        public string UpdatedBy { get; set; }
        public bool? Active_flag { get; set; }
        public bool? Deleted_flag { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Book_Authored_AuthorController> Book_Authored_Author { get; set; }
        #endregion

        #region Methods
        public static List<Book_AuthoredController> getBooksAll()
        {
            string strStoredProcedureName = "sp_rep_getBooksAll";

            DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure);

            return helper(dt);
        }
        public static List<Book_AuthoredController> getBooksByFaculty(int id)
        {
            string strStoredProcedureName = "sp_rep_getBooksByFaculty";

            SqlParameter param = new SqlParameter();
            param.ParameterName = "@id";
            param.SqlDbType = SqlDbType.Int;
            param.Value = id;

            DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure, param);

            return helper(dt);
        }
        public static List<Book_AuthoredController> getBooksByCollege(string college_code)
        {
            string strStoredProcedureName = "sp_rep_getBooksByCollege";

            SqlParameter param = new SqlParameter();
            param.ParameterName = "@college_code";
            param.SqlDbType = SqlDbType.Char;
            param.Value = college_code;

            DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure, param);

            return helper(dt);

        }
        public static List<Book_AuthoredController> getBooksByDepartment(string dept_code)
        {
            string strStoredProcedureName = "sp_rep_getBooksByDepartment";

            SqlParameter param = new SqlParameter();
            param.ParameterName = "@dept_code";
            param.SqlDbType = SqlDbType.Char;
            param.Value = dept_code;

            DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure, param);

            return helper(dt);
        }
        //public static List<Book_AuthoredController> getNumberOfBooks(string college_code)
        //{
        //    string strStoredProcedureName = "sp_getNumberOfBooks";
            
        //    DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure);

        //    return helper(dt);
        //}
        //public static List<Book_AuthoredController> getNumberOfBooksByCollege(string college_code)
        //{
        //    string strStoredProcedureName = "sp_getNumberOfBooksByCollege";

        //    SqlParameter param = new SqlParameter();
        //    param.ParameterName = "@college_code";
        //    param.SqlDbType = SqlDbType.Char;
        //    param.Value = college_code;

        //    DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure, param);

        //    return helper(dt);
        //}
        //public static List<Book_AuthoredController> getNumberOfBooksByDepartment(string dept_code)
        //{
        //    string strStoredProcedureName = "sp_rep_getNumberOfBooksByDepartment";

        //    SqlParameter param = (new SqlParameter("@dept_code", dept_code));

        //    DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure, param);

        //    return helper(dt);
        //}
        //public static List<Book_AuthoredController> getNumberOfBooksByFaculty(int id)
        //{
        //    string strStoredProcedureName = "sp_getNumberOfBooksByFaculty";

        //    SqlParameter param = new SqlParameter();
        //    param.ParameterName = "@id";
        //    param.SqlDbType = SqlDbType.Int;
        //    param.Value = id;

        //    DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure, param);

        //    return helper(dt);
        //}
        private static List<Book_AuthoredController> helper(DataTable dt)
        {
            List<Book_AuthoredController> list = dt.AsEnumerable()

                .Select(dr =>
                new Book_AuthoredController
                {
                    Book_Authored_ID = dr.Field<int>("Book_Authored_ID"),
                    Book_Title = dr.Field<string>("Book_Title"),
                    Authors = dr.Field<string>("Authors"),
                    Publication_Year = dr.Field<string>("Publication_Year"),
                    Publisher = dr.Field<string>("Publisher"),
                    Country = dr.Field<string>("Country"),
                    Project_Code = dr.Field<string>("Project_Code"),
                    Funding_Year = dr.Field<Nullable<int>>("Funding_Year"),
                    Language = dr.Field<string>("Language"),
                    isCompleted = dr.Field<bool>("isCompleted"),
                    Deleted_flag = dr.Field<Nullable<bool>>("Deleted_flag"),
                    Active_flag = dr.Field<Nullable<bool>>("Active_flag"),
                    CreatedBy = dr.Field<string>("CreatedBy"),
                    CreatedOn = dr.Field<System.DateTime>("CreatedOn")
                }
                ).ToList();

            return list;
        }
        #endregion

    }
}
